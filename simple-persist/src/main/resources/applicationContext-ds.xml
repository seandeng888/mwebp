<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
		default-autowire="byName">

    <!-- 数据源定义 -->
     <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean" scope="singleton" lazy-init="default"
        autowire="default">
        <property name="jndiName" value="${jndi.base}"/>
    </bean>
   
	<!-- Session工厂 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
		scope="singleton" lazy-init="default" autowire="default">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		
		<!-- 为处理Blob类型字段的句柄声明 //-->
		<property name="lobHandler">
			<ref local="oracleLobHandler" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.Oracle9Dialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<!-- <prop key="hibernate.hbm2ddl.auto">update</prop>  -->
				<prop key="hibernate.cglib.use_reflection_optimizer">
					true
				</prop>
			</props>
		</property>
        <property name="mappingJarLocations">
            <list>
                <value>WEB-INF/lib/DUCEAP*.jar</value>
                <value>WEB-INF/lib/DUWF*.jar</value>
                <value>WEB-INF/lib/CACS*.jar</value>
            </list>
        </property>
	</bean>

	<!-- JDBC模版 -->
	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>

	<!-- Hibernate模版 -->
	<bean id="hibernateTemplate"
		class="org.springframework.orm.hibernate3.HibernateTemplate"
		scope="singleton" lazy-init="default" autowire="default">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
    
	<!-- 事务控制配置 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		scope="singleton" lazy-init="default" autowire="default">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>
	
	<!-- 编程式事务模板 -->
	<bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate" scope="prototype">
    	<property name="transactionManager" ref="transactionManager"></property>
    </bean>
	 <!-- mybatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="mapperLocations" value="classpath*:/com/dragonsoft/cacs/autoback/**/*Mapper.xml"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
    	<constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>
    </bean>
	<bean id="txProxyTemplate" abstract="true"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="*login*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="add*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="execute*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="save*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="update*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="remove*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="del*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="load*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="export*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="import*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly,-Exception</prop>
				<prop key="query*">PROPAGATION_REQUIRED,readOnly,-Exception</prop>
			</props>
		</property>
	</bean>
	
	<!-- 
		以下是:处理Blob类型的特殊声明
		webshpere部署采用JNDI方式：org.springframework.jdbc.support.nativejdbc.WebSphereNativeJdbcExtractor
		不采用JNDI方式：org.springframework.jdbc.support.nativejdbc.SimpleNativeJdbcExtractor 
	-->
	<bean id="nativeJdbcExtractor" class="org.springframework.jdbc.support.nativejdbc.CommonsDbcpNativeJdbcExtractor"
		lazy-init="true" />
	<!-- 属性文件读入 -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    	<property name="locations">
    		<list>
    			<value>classpath*:mwebp.properties</value>
    		</list>
    	</property>
    </bean>
 	
 	<bean id="oracleLobHandler"
		class="org.springframework.jdbc.support.lob.OracleLobHandler"
		lazy-init="true">
		<property name="nativeJdbcExtractor">
			<ref bean="nativeJdbcExtractor" />
		</property>
	</bean>
	
    <import resource="classpath:org/codehaus/xfire/spring/xfire.xml"/>  
	
	  <!-- 使用XFire导出器 --> 
    <bean id="baseWebService" class="org.codehaus.xfire.spring.remoting.XFireExporter" lazy-init="false" abstract="true"> 
       <!-- 引用xfire.xml中定义的工厂 --> 
       <property name="serviceFactory" ref="xfire.serviceFactory" /> 
       <!-- 引用xfire.xml中的xfire实例 --> 
       <property name="xfire" ref="xfire" /> 
    </bean>

</beans>
